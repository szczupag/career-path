package com.drools.example

import com.drools.example.Career.Question;
import com.drools.example.Career.Answer;
import com.drools.example.Career.Solution
import java.awt.GridLayout
import java.util.ArrayList
import java.awt.event.ItemListener
import java.awt.event.ItemEvent
import java.util.Arrays;
import org.kie.api.runtime.KieRuntime
import javax.swing.JRadioButton
import javax.swing.JLabel
import javax.swing.JPanel
import javax.swing.ButtonGroup
import javax.swing.JOptionPane
import javax.swing.JFrame

global JFrame frame

//STOP
rule "Solution"
    when
        Solution();
    then
        System.out.println("STOP");
end

//INITIAL QUESTION
rule "Q1"
	when
	then
	    Question question1 = new Question("Do you want a responsible job", 1);
	    getAnswer(frame, question1, false, kcontext.getKieRuntime());
	    insert(question1);
		System.out.println(question1.questionText);
end

//Q1-YES
rule "Q2"
    when
        q: Question(index==1, answer==Answer.YES);
    then
        Question question2 = new Question("Marks higher than 60%", 2);
	    getAnswer(frame, question2, false, kcontext.getKieRuntime());
	    insert(question2);
		System.out.println(question2.questionText);
end

//Q1-NO
rule "Q1-sol"
    when
        q: Question(index==1, answer==Answer.NO);
    then
        Solution solution = new Solution("Become a hippie");
		System.out.println(solution.solutionText);
end

//Q2-YES
rule "Q3"
    when
        q: Question(index==2, answer==Answer.YES);
    then
        Question question3 = new Question("Willing to study hard", 3);
        getAnswer(frame, question3, true, kcontext.getKieRuntime());
        retract(q);
        insert(question3);
        System.out.println(question3.questionText);
end

//Q2-NO or Q8-NO or Q5-NO
rule "Q4"
    when
        q: Question((index==2 && answer==Answer.NO)
        || (index==8 && answer==Answer.NO)
        || (index==5 && answer==Answer.NO));
    then
        Question question4 = new Question("Want further schooling", 4);
        getAnswer(frame, question4, false, kcontext.getKieRuntime());
        retract(q);
        insert(question4);
        System.out.println(question4.questionText);
end

//Q3-MAYBE
rule "Q3-sol"
    when
        q: Question(index==3, answer==Answer.MAYBE);
    then
        Solution solution = new Solution("Go to work for a year");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q3-NO or Q8-YES
rule "Q5"
    when
        q: Question((index==3 && answer==Answer.NO)||(index==8 && answer==Answer.YES));
    then
        Question question5 = new Question("Will it last", 5);
        getAnswer(frame, question5, false, kcontext.getKieRuntime());
        retract(q);
        insert(question5);
        System.out.println(question5.questionText);
end

//Q3-YES
rule "Q6"
    when
        q: Question(index==3, answer==Answer.MAYBE);
    then
        Question question6 = new Question("Do you want to help society", 6);
        getAnswer(frame, question6, false, kcontext.getKieRuntime());
        retract(q);
        insert(question6);
        System.out.println(question6.questionText);
end

//Q4-YES
rule "Q7"
    when
        q: Question(index==4, answer==Answer.YES);
    then
        Question question7 = new Question("Interested in sciences", 7);
        getAnswer(frame, question7, false, kcontext.getKieRuntime());
        retract(q);
        insert(question7);

        System.out.println(question7.questionText);
end

//Q4-NO
rule "Q8"
    when
        q: Question(index==4, answer==Answer.NO);
    then
        Question question8 = new Question("Can you get a job", 8);
        getAnswer(frame, question8, false, kcontext.getKieRuntime());
        retract(q);
        insert(question8);
        System.out.println(question8.questionText);
end

//Q5-YES
rule "Q5-sol"
    when
        q: Question(index==5, answer==Answer.YES);
    then
        Solution solution = new Solution("Continue as long as you can");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q6-YES
rule "Q9"
    when
        q: Question(index==6, answer==Answer.YES);
    then
        Question question9 = new Question("Are you good in english or french", 9);
        getAnswer(frame, question9, false, kcontext.getKieRuntime());
        retract(q);
        insert(question9);
        System.out.println(question9.questionText);
end

//Q6-NO
rule "Q6-sol"
    when
        q: Question(index==6, answer==Answer.NO);
    then
        Solution solution = new Solution("Become a lawyer");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q7-YES
rule "Q10"
    when
        q: Question(index==7, answer==Answer.YES);
    then
        Question question10 = new Question("Like outdoor work", 10);
        getAnswer(frame, question10, false, kcontext.getKieRuntime());
        retract(q);
        insert(question10);
        System.out.println(question10.questionText);
end

//Q7-NO Q11-YES Q12-YES
rule "Q7-sol"
    when
        q: Question((index==7 && answer==Answer.NO)||(index==11 && answer==Answer.YES)||(index==12 && answer==Answer.YES));
    then
        Solution solution = new Solution("This flow-sheet can't help you");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q9-YES
rule "Q11"
    when
        q: Question(index==9, answer==Answer.YES);
    then
        Question question11 = new Question("Want to become rich", 11);
        getAnswer(frame, question11, false, kcontext.getKieRuntime());
        retract(q);
        insert(question11);
        System.out.println(question11.questionText);
end

//Q9-NO 18
rule "Q9-sol"
    when
        q: Question(index==9, answer==Answer.NO);
    then
        Solution solution = new Solution("Take remedial language class");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q10-YES
rule "Q12"
    when
        q: Question(index==10, answer==Answer.YES);
    then
        Question question12 = new Question("Like biology", 12);
        getAnswer(frame, question12, false, kcontext.getKieRuntime());
        retract(q);
        insert(question12);
        System.out.println(question12.questionText);
end

//Q10-NO
rule "Q13"
    when
        q: Question(index==10, answer==Answer.NO);
    then
        Question question13 = new Question("Like electronics", 13);
        getAnswer(frame, question13, false, kcontext.getKieRuntime());
        retract(q);
        insert(question13);
        System.out.println(question13.questionText);
end

//Q11-NO
rule "Q14"
    when
        q: Question(index==11, answer==Answer.NO);
    then
        Question question14 = new Question("Interested in practical problems", 14);
        getAnswer(frame, question14, false, kcontext.getKieRuntime());
        retract(q);
        insert(question14);
        System.out.println(question14.questionText);
end

//Q12-NO
rule "Q12-sol"
    when
        q: Question(index==12, answer==Answer.NO);
    then
        Solution solution = new Solution("Take surveying course");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q13-YES
rule "Q13-sol"
    when
        q: Question(index==13, answer==Answer.YES);
    then
        Solution solution = new Solution("Take electronics course");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end

//Q14-YES
rule "Q15"
    when
        q: Question(index==14, answer==Answer.YES);
    then
        Question question15 = new Question("Think these questions are endless", 15);
        getAnswer(frame, question15, false, kcontext.getKieRuntime());
        retract(q);
        insert(question15);
        System.out.println(question15.questionText);
end

//Q14-NO
rule "Q14-sol"
    when
        q: Question(index==14, answer==Answer.NO);
    then
        Solution solution = new Solution("Become a statistician");
        retract(q);
        insert(solution);
        System.out.println(solution.solutionText);
end


function Question getAnswer(JFrame frame, Question question, boolean containsMaybe, KieRuntime krt) {
function void displaySolution(JFrame frame, Solution solution) {
        final JPanel panel = new JPanel();
        panel.add(new JLabel(solution.solutionText));
        JOptionPane.showMessageDialog(frame, panel);
}

function Question getAnswer(JFrame frame, Question question, boolean containsMaybe) {

        class ButtonListener implements ItemListener {
                    private Question question;
                    private Answer answer;
                    public ButtonListener(Question question, Answer answer) {
                            this.question = question;
                            this.answer = answer;
                    }

                    @Override
                    public void itemStateChanged(ItemEvent event) {
                            if (event.getStateChange() == ItemEvent.SELECTED) {
                                question.setAnswer(answer);
                            }
                    }
                }

        final JPanel panel = new JPanel(new GridLayout (0,1));
        panel.add(new JLabel(question.getQuestionText()));
        ArrayList<JRadioButton> buttons = new ArrayList<>();

        JRadioButton yesButton = new JRadioButton(Answer.YES.toString());
        yesButton.addItemListener(new ButtonListener(question, Answer.YES));

        JRadioButton noButton = new JRadioButton(Answer.NO.toString());
        noButton.addItemListener(new ButtonListener(question, Answer.NO));

        JRadioButton maybeButton = new JRadioButton(Answer.MAYBE.toString());
        maybeButton.addItemListener(new ButtonListener(question, Answer.MAYBE));

        if(containsMaybe) {
            buttons.addAll(Arrays.asList(yesButton, noButton, maybeButton));
        } else {
            buttons.addAll(Arrays.asList(yesButton, noButton));
        }

        ButtonGroup group = new ButtonGroup();
        for (int i=0;i<buttons.size();i++) {
            group.add(buttons.get(i));
            panel.add(buttons.get(i));
        }

        JOptionPane.showConfirmDialog(frame, panel, "Question", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);

        return question;
}